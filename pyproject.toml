[project]
name = "grid_trading_bot"
version = "0.1.0"
description = "Open-source cryptocurrency trading bot designed to perform grid trading strategies using historical data for backtesting."
authors = [{ name = "Jordan TETE", email = "tetej171@gmail.com" }]
readme = "README.md"
license = { file = "LICENSE.txt" }
requires-python = ">=3.12"
dependencies = [
    "pandas==2.2.3",
    "numpy==2.1.3",
    "plotly==6.1.1",
    "tabulate==0.9.0",
    "aiohttp==3.10.11",
    "apprise==1.9.3",
    "ccxt==4.4.82",
    "configparser==7.2.0",
    "psutil==7.0.0",
    "python-dotenv==1.1.0",
    "flask==3.0.0",
    "flask-cors==4.0.0",
    "dash==2.17.1",
    "dash-bootstrap-components==1.5.0"
]

[project.optional-dependencies]
dev = [
    "pytest==8.3.5",
    "pytest-asyncio==0.26.0",
    "pytest-cov==6.1.1",
    "pytest-timeout==2.4.0",
]

[project.urls]
repository= "https://github.com/jordantete/grid_trading_bot"
issues = "https://github.com/jordantete/grid_trading_bot/issues"
discussions = "https://github.com/jordantete/grid_trading_bot/discussions"

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
log_cli = true
log_cli_level = "INFO"
timeout = 10
timeout_method = "thread"
markers = [
    "asyncio: mark a test as an async test",
    "timeout: mark a test with a timeout"
]

[tool.coverage.run]
omit = [
    "*/interface*.py"
]

[tool.black]
line-length = 120
skip-string-normalization = true

[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["."]
exclude = ["logs", "data"]

[tool.setuptools]
include-package-data = true